// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2
// Source: comment.proto

package comment

import (
	"context"

	"zhifou/application/comment/rpc/service"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CommentItem              = service.CommentItem
	CreateCommentRequest     = service.CreateCommentRequest
	CreateCommentResponse    = service.CreateCommentResponse
	DeleteCommentRequest     = service.DeleteCommentRequest
	DeleteCommentResponse    = service.DeleteCommentResponse
	GetAllCommentsRequest    = service.GetAllCommentsRequest
	GetAllCommentsResponse   = service.GetAllCommentsResponse
	GetChildCommentsRequest  = service.GetChildCommentsRequest
	GetChildCommentsResponse = service.GetChildCommentsResponse
	GetRootCommentsRequest   = service.GetRootCommentsRequest
	GetRootCommentsResponse  = service.GetRootCommentsResponse

	Comment interface {
		// 创建评论
		CreateComment(ctx context.Context, in *CreateCommentRequest, opts ...grpc.CallOption) (*CreateCommentResponse, error)
		// 删除评论
		DeleteComment(ctx context.Context, in *DeleteCommentRequest, opts ...grpc.CallOption) (*DeleteCommentResponse, error)
		// 获取帖子的全部评论列表
		GetAllComments(ctx context.Context, in *GetAllCommentsRequest, opts ...grpc.CallOption) (*GetAllCommentsResponse, error)
		// 获取帖子的根评论列表
		GetRootComments(ctx context.Context, in *GetRootCommentsRequest, opts ...grpc.CallOption) (*GetRootCommentsResponse, error)
		// 获取评论的全部子评论列表
		GetChildComments(ctx context.Context, in *GetChildCommentsRequest, opts ...grpc.CallOption) (*GetChildCommentsResponse, error)
	}

	defaultComment struct {
		cli zrpc.Client
	}
)

func NewComment(cli zrpc.Client) Comment {
	return &defaultComment{
		cli: cli,
	}
}

// 创建评论
func (m *defaultComment) CreateComment(ctx context.Context, in *CreateCommentRequest, opts ...grpc.CallOption) (*CreateCommentResponse, error) {
	client := service.NewCommentClient(m.cli.Conn())
	return client.CreateComment(ctx, in, opts...)
}

// 删除评论
func (m *defaultComment) DeleteComment(ctx context.Context, in *DeleteCommentRequest, opts ...grpc.CallOption) (*DeleteCommentResponse, error) {
	client := service.NewCommentClient(m.cli.Conn())
	return client.DeleteComment(ctx, in, opts...)
}

// 获取帖子的全部评论列表
func (m *defaultComment) GetAllComments(ctx context.Context, in *GetAllCommentsRequest, opts ...grpc.CallOption) (*GetAllCommentsResponse, error) {
	client := service.NewCommentClient(m.cli.Conn())
	return client.GetAllComments(ctx, in, opts...)
}

// 获取帖子的根评论列表
func (m *defaultComment) GetRootComments(ctx context.Context, in *GetRootCommentsRequest, opts ...grpc.CallOption) (*GetRootCommentsResponse, error) {
	client := service.NewCommentClient(m.cli.Conn())
	return client.GetRootComments(ctx, in, opts...)
}

// 获取评论的全部子评论列表
func (m *defaultComment) GetChildComments(ctx context.Context, in *GetChildCommentsRequest, opts ...grpc.CallOption) (*GetChildCommentsResponse, error) {
	client := service.NewCommentClient(m.cli.Conn())
	return client.GetChildComments(ctx, in, opts...)
}
