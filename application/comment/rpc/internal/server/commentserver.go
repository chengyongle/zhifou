// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2
// Source: comment.proto

package server

import (
	"context"

	"zhifou/application/comment/rpc/internal/logic"
	"zhifou/application/comment/rpc/internal/svc"
	"zhifou/application/comment/rpc/service"
)

type CommentServer struct {
	svcCtx *svc.ServiceContext
	service.UnimplementedCommentServer
}

func NewCommentServer(svcCtx *svc.ServiceContext) *CommentServer {
	return &CommentServer{
		svcCtx: svcCtx,
	}
}

// 创建评论
func (s *CommentServer) CreateComment(ctx context.Context, in *service.CreateCommentRequest) (*service.CreateCommentResponse, error) {
	l := logic.NewCreateCommentLogic(ctx, s.svcCtx)
	return l.CreateComment(in)
}

// 删除评论
func (s *CommentServer) DeleteComment(ctx context.Context, in *service.DeleteCommentRequest) (*service.DeleteCommentResponse, error) {
	l := logic.NewDeleteCommentLogic(ctx, s.svcCtx)
	return l.DeleteComment(in)
}

// 获取帖子的全部评论列表
func (s *CommentServer) GetAllComments(ctx context.Context, in *service.GetAllCommentsRequest) (*service.GetAllCommentsResponse, error) {
	l := logic.NewGetAllCommentsLogic(ctx, s.svcCtx)
	return l.GetAllComments(in)
}

// 获取帖子的根评论列表
func (s *CommentServer) GetRootComments(ctx context.Context, in *service.GetRootCommentsRequest) (*service.GetRootCommentsResponse, error) {
	l := logic.NewGetRootCommentsLogic(ctx, s.svcCtx)
	return l.GetRootComments(in)
}

// 获取评论的全部子评论列表
func (s *CommentServer) GetChildComments(ctx context.Context, in *service.GetChildCommentsRequest) (*service.GetChildCommentsResponse, error) {
	l := logic.NewGetChildCommentsLogic(ctx, s.svcCtx)
	return l.GetChildComments(in)
}
